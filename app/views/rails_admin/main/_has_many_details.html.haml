:ruby
  require 'rails_admin/config/fields/types/datetime.rb'

  params = request.params.except(:authenticity_token, :action, :controller, :utf8, :bulk_export, :_pjax)
  params.delete(:sort_reverse) unless params[:sort_reverse] == 'true'
  params.delete(:sort) if params[:sort] == model_config.list.sort_by.to_s
  properties = model_config.list.with(controller: self.controller, view: self, object: abstract_model.model.new).visible_fields
  # columns paginate
  sets = get_column_sets(properties)
  properties = sets[params[:set].to_i] || []

#list
  %style
    - properties.select{ |p| p.column_width.present? }.each do |property|
      = "#list th.#{property.css_class} { width: #{property.column_width}px; min-width: #{property.column_width}px; }"
      = "#list td.#{property.css_class} { max-width: #{property.column_width}px; }"

  %table.table.table-condensed.table-striped.table-hover
    %thead
      %tr
        %th.shrink
        - properties.each do |property|
          %th= capitalize_first_letter(property.label)

    %tbody
      - objects.each do |object|
        %tr{class: "#{abstract_model.param_key}_row"}
          %td
            = link_to "<i class='btn btn-primary fa fa-info-circle'></i>".html_safe , show_path(model_name:abstract_model,id:object.id) , class:'pjax'
            = link_to "<i class='btn btn-info fa fa-pencil'></i>".html_safe , edit_path(model_name:abstract_model,id:object.id), class:'pjax'
          - properties.map{ |property| property.bind(:object, object) }.each do |property|
            - value =  property.pretty_value
            %td{class: "#{property.css_class} #{property.type_css_class}", title: strip_tags(value.to_s)}= value
